openapi: 3.0.0
info:
  title: BeerLot API
  description: BeerLot API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/beerlot-contact/beerlot-api-spec/1.0.0
  description: SwaggerHub API Auto Mocking
security:
- password:
  - read
  - write
tags:
- name: member
  description: member management
- name: beer
  description: beer management
- name: beer review
  description: beer review management
- name: beer favorite
  description: beer favorite management
- name: beer category
  description: beer category management
- name: beer tag
  description: beer tag management
paths:
  /members:
    get:
      tags:
      - member
      summary: Check if given username already exists
      operationId: checkUsernameDuplicated
      parameters:
      - name: username
        in: query
        description: username
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 비어러버
      responses:
        "200":
          description: Ok to use the username.
        "409":
          description: Conflict. The username already exists.
        "500":
          description: Internal server error. Unexpected error.
    post:
      tags:
      - member
      summary: Signup
      operationId: createMember
      requestBody:
        description: Member Signup Form
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateReqDto'
            examples:
              MemberReqDto_Example:
                $ref: '#/components/examples/MemberReqDto_Example'
        required: true
      responses:
        "201":
          description: Created.
        "500":
          description: Internal server error. Unexpected error.
    patch:
      tags:
      - member
      summary: Update Member Profile
      operationId: updateMember
      requestBody:
        description: Member Profile Update Form
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdateReqDto'
            examples:
              MemberUpdateReq_Example:
                $ref: '#/components/examples/MemberUpdateReqDto_Example'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResDto'
              examples:
                MemberRes_Example:
                  $ref: '#/components/examples/MemberResDto_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "500":
          description: Internal server error. Unexpected error.
  /members/me:
    get:
      tags:
      - member
      summary: Get Member Profile
      operationId: getMember
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResDto'
              examples:
                MemberRes_Example:
                  $ref: '#/components/examples/MemberResDto_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "500":
          description: Internal server error. Unexpected error.
  /beers:
    get:
      tags:
      - beer
      summary: Get all beers with full search
      operationId: findBeersBySearch
      parameters:
      - name: keyword
        in: query
        description: Search keyword
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 골든 에일
      - name: categories
        in: query
        description: Category IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - 1
          - 2
          items:
            type: integer
            format: int64
      - name: countries
        in: query
        description: Countries
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - KO
          - US
          items:
            type: string
      - name: volumes
        in: query
        description: Beer Alcohol Volume
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - 4
          - 8
          items:
            type: integer
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: size of one page
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerPage'
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /beers/{beerId}:
    get:
      tags:
      - beer
      summary: Get one beer
      operationId: findBeerById
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBeerResDto'
              examples:
                FindBeerRes_Example:
                  $ref: '#/components/examples/FindBeerResDto_Example'
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /reviews/{beerId}:
    get:
      tags:
      - beer review
      summary: Get all reviews specified by beer ID
      operationId: getReviews
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                example:
                - id: 1
                  content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
                  rate: 5.0
                - id: 2
                  content: 생각한것보다 좀 맹맹했어요ㅜㅜ
                  rate: 3.5
                items:
                  $ref: '#/components/schemas/ReviewResDto'
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    post:
      tags:
      - beer review
      summary: Create a new review
      operationId: createReview
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateReqDto'
            examples:
              ReviewCreateReq_Example:
                $ref: '#/components/examples/ReviewCreateReqDto_Example'
        required: true
      responses:
        "201":
          description: Review created.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
  /reviews/{reviewId}:
    get:
      tags:
      - beer review
      summary: Get one review with specified ID
      operationId: getReview
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: Ok. Get review.
          content:
            application/json:
              examples:
                ReviewRes_Example:
                  $ref: '#/components/examples/ReviewResDto_Example'
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    delete:
      tags:
      - beer review
      summary: Delete the review
      operationId: deleteReview
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "204":
          description: Review deleted.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "403":
          description: Forbidden. Inproper authorization.
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    patch:
      tags:
      - beer review
      summary: Update the review
      operationId: updateReview
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateReqDto'
            examples:
              ReviewCreateReq_Example:
                $ref: '#/components/examples/ReviewCreateReqDto_Example'
        required: true
      responses:
        "200":
          description: Ok. Review updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResDto'
              examples:
                ReviewRes_Example:
                  $ref: '#/components/examples/ReviewResDto_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "403":
          description: Forbidden. Inproper authorization.
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
  /beers/{beerId}/favorites:
    post:
      tags:
      - beer favorite
      summary: Favorite the beer with specified id
      operationId: createFavorite
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: Already favorited.
        "201":
          description: Favorite created.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    delete:
      tags:
      - beer favorite
      summary: Unfavorite the beer with specified id
      operationId: deleteFavorite
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: No favorite found.
        "204":
          description: Unfavorite succeeded.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
  /categories:
    get:
      tags:
      - beer category
      summary: Get all categories
      operationId: getCategories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - id: 1
                  name: 에일
                  description: This is Ale.
                  children:
                  - id: 10
                    name: 아메리칸 블론드 에일
                    description: This is American Blonde Ale.
                - id: 2
                  name: IPA
                  children:
                  - id: 17
                    name: 잉글리쉬 IPA
                    description: This is English IPA.
                  - id: 21
                    name: 아메리칸 IPA
                    description: This is American IPA.
                items:
                  $ref: '#/components/schemas/FindCategorySupResDto'
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /categories/{categoryId}:
    get:
      tags:
      - beer category
      summary: Get one category found by category id
      operationId: getCategory
      parameters:
      - name: categoryId
        in: path
        description: beer category id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCategorySupResDto'
              examples:
                FindCategoryResDto_Example:
                  $ref: '#/components/examples/FindCategoryResDto_Example'
        "404":
          description: Not found. The category with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /tags:
    get:
      tags:
      - beer tag
      summary: Get all beer tags
      operationId: getTags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - id: 1
                  name_ko: 사이다
                  name_en: Cider
                - id: 2
                  name_ko: 생강
                  name_en: Ginger
                items:
                  $ref: '#/components/schemas/FindTagResDto'
        "500":
          description: Internal server error. Unexpected error.
      security: []
components:
  schemas:
    BeerPage:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/FindBeerResDto'
        pageable:
          type: object
        total:
          type: integer
          format: int32
    MemberCreateReqDto:
      required:
      - email
      - password
      - username
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
      description: Member Signup Form
    MemberUpdateReqDto:
      type: object
      properties:
        username:
          type: string
          example: beerlover
      description: Member Profile Update Form
    ReviewCreateReqDto:
      required:
      - content
      - rate
      type: object
      properties:
        content:
          type: string
        rate:
          multipleOf: 0.5
          type: number
          format: float
    BaseResDto:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    MemberResDto:
      required:
      - email
      - email_verified
      - password
      - username
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
        image_url:
          type: string
        email_verified:
          type: boolean
          default: false
      allOf:
      - $ref: '#/components/schemas/BaseResDto'
    FindBeerResDto:
      required:
      - country
      - description
      - name_en
      - name_ko
      - volume
      type: object
      properties:
        name_en:
          type: string
        name_ko:
          type: string
        description:
          type: string
        country:
          $ref: '#/components/schemas/FindCountryResDto'
        volume:
          minimum: 0.0
          type: number
          format: float
        image_url:
          type: string
        category:
          $ref: '#/components/schemas/FindCategorySupResDto'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FindTagResDto'
      example:
        $ref: '#/components/examples/FindBeerResDto_Example'
      allOf:
      - $ref: '#/components/schemas/BaseResDto'
    FindCountryResDto:
      type: object
      properties:
        code:
          type: string
    FindCategorySupResDto:
      required:
      - description
      - name_en
      - name_ko
      - parent
      type: object
      properties:
        name_ko:
          type: string
        name_en:
          type: string
        description:
          type: string
        parent:
          $ref: '#/components/schemas/FindCategorySupResDto'
      allOf:
      - $ref: '#/components/schemas/BaseResDto'
    FindTagResDto:
      required:
      - name
      type: object
      properties:
        name_ko:
          type: string
        name_en:
          type: string
      allOf:
      - $ref: '#/components/schemas/BaseResDto'
    ReviewResDto:
      required:
      - rate
      type: object
      properties:
        content:
          type: string
        rate:
          type: integer
          format: float
      allOf:
      - $ref: '#/components/schemas/BaseResDto'
  responses:
    Created:
      description: Created.
    Unauthorized:
      description: Unauthorized. Access token is missing or invalid.
    Forbidden:
      description: Forbidden. Inproper authorization.
    InternalServerError:
      description: Internal server error. Unexpected error.
  parameters:
    memberId:
      name: memberId
      in: path
      description: Member ID
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: 1
    keyword:
      name: keyword
      in: query
      description: Search keyword
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: 골든 에일
    categories:
      name: categories
      in: query
      description: Category IDs
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - 1
        - 2
        items:
          type: integer
          format: int64
    countries:
      name: countries
      in: query
      description: Countries
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - KO
        - US
        items:
          type: string
    volumes:
      name: volumes
      in: query
      description: Beer Alcohol Volume
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - 4
        - 8
        items:
          type: integer
    beerId:
      name: beerId
      in: path
      description: beer id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: "1"
    categoryId:
      name: categoryId
      in: path
      description: beer category id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: "1"
    reviewId:
      name: reviewId
      in: path
      description: beer review id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: "1"
    page:
      name: page
      in: query
      description: page number
      required: true
      style: form
      explode: true
      schema:
        type: integer
    size:
      name: size
      in: query
      description: size of one page
      required: true
      style: form
      explode: true
      schema:
        type: integer
  examples:
    MemberReqDto_Example:
      value:
        email: beer.lover@email.com
        password: PWbeer10ver*!
        username: 비어러버
    MemberUpdateReqDto_Example:
      value:
        username: 퇴근후한캔
    ReviewCreateReqDto_Example:
      value:
        content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
        rate: 5.0
    MemberResDto_Example:
      value:
        id: 1
        email: beer.lover@email.com
        password: beer10ver!@#
        username: 비어러버
        image_url: "returned_from_server: <base_url>/<file_name>"
        email_verified: true
    FindBeerResDto_Example:
      value:
        id: 1
        name_ko: 빅 웨이브
        name_en: Bigwave
        description: 미묘한 과일 향과 섬세한 홉 향이 나는 가벼운 골든 에일입니다. 부드럽고 마시기 좋은 상쾌한 에일입니다. 가볍게
          볶은 허니 몰트는 이 맥주의 황금빛 색조에 기여하고 우리의 특별한 홉 블렌드로 균형을 이루는 약간의 단맛을 제공합니다.
        country:
          code: US
          name_ko: 미국
          name_en: The United States
        volume: 4.4
        image_url: "returned_from_server: <base_url>/<file_name>"
        category:
          id: 1
          name_ko: 아메리칸 블론드 에일
          name_en: American Blonde Ale
          description: 아메리칸 블론드 에일은...
          parent:
            id: 10
            name_ko: 에일
            name_en: Ale
            description: 에일은...
        tags:
        - id: 1
          name_ko: 시트라
          name_en: Citra
          description: 시트라 홉은...
    FindCategoryResDto_Example:
      value:
        id: 1
        name: 아메리칸 블론드 에일
        description: This is American Blonde Ale.
    FindCountryResDto_Example:
      value:
        code: US
    FindTagResDto_Example:
      value:
        id: 1
        name_ko: 사이다
        name_en: Cider
    ReviewResDto_Example:
      value:
        id: 1
        content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
        rate: 5.0
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: http://example.com/oauth/token
          scopes:
            write: allows modifying resources
            read: allows reading resources
