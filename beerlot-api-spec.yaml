openapi: 3.0.0
info:
  title: BeerLot API
  description: BeerLot API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/beerlot-contact/beerlot-api-spec/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://beerlot-core-obtg3qwuhq-an.a.run.app/api/v1
  description: DEV
tags:
- name: auth
  description: auth management
- name: member
  description: member management
- name: beer
  description: beer management
- name: review
  description: beer review management
- name: review like
  description: beer review like management
- name: beer like
  description: beer like management
- name: category
  description: category management
- name: tag
  description: tag management
paths:
  /auth/authorization/{provider}:
    get:
      tags:
      - auth
      summary: Social Login
      operationId: login
      parameters:
      - name: provider
        in: path
        description: OAuth Provider Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ProviderType'
        example: google
      - name: beerlot-oauth-redirect-url
        in: query
        description: redirect url to frontend
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: https://beerlot-front.com
      responses:
        "302":
          description: Successfully redirected.
        "400":
          description: Invalid redirect url.
        "401":
          description: Unauthorized.
        "500":
          description: Internal server error. Unexpected error.
  /auth/refresh:
    patch:
      tags:
      - auth
      summary: Update refresh token
      operationId: refreshToken
      responses:
        "200":
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
              examples:
                AccessTokenResponse_Example:
                  value: null
                  $ref: '#/components/examples/AccessTokenResponse_Example'
        "500":
          description: Internal server error. Unexpected error.
      x-http-servlet-request: true
      x-http-servlet-response: true
      x-authorization-bearer-token: true
  /auth/signup:
    patch:
      tags:
      - auth
      summary: Signup User
      operationId: signUp
      requestBody:
        description: User Signup Form
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreateRequest'
            examples:
              MemberCreateRequest_Example:
                value: null
                $ref: '#/components/examples/MemberCreateRequest_Example'
        required: true
      responses:
        "201":
          description: Created.
        "409":
          description: Conflict. Already exists.
        "500":
          description: Internal server error. Unexpected error.
      security:
      - BearerAuth: []
  /members:
    get:
      tags:
      - member
      summary: Check if given username already exists
      operationId: checkUsernameDuplicated
      parameters:
      - name: username
        in: query
        description: username
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 비어러버
      responses:
        "200":
          description: Ok to use the username.
        "409":
          description: Conflict. The username already exists.
        "500":
          description: Internal server error. Unexpected error.
    patch:
      tags:
      - member
      summary: Update Member Profile
      operationId: updateMember
      requestBody:
        description: Member Profile Update Form
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdateRequest'
            examples:
              MemberUpdateRequest_Example:
                value: null
                $ref: '#/components/examples/MemberUpdateRequest_Example'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
              examples:
                MemberRes_Example:
                  value: null
                  $ref: '#/components/examples/MemberResponse_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "500":
          description: Internal server error. Unexpected error.
  /members/me:
    get:
      tags:
      - member
      summary: Get Member Profile
      operationId: getMember
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
              examples:
                MemberRes_Example:
                  value: null
                  $ref: '#/components/examples/MemberResponse_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "500":
          description: Internal server error. Unexpected error.
  /{languageCode}/beers:
    get:
      tags:
      - beer
      summary: Get all beers with full search
      operationId: findBeersBySearch
      parameters:
      - name: languageCode
        in: path
        description: Language Code
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/LanguageCode'
        example: kr
      - name: keyword
        in: query
        description: Search keyword
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 골든 에일
      - name: categories
        in: query
        description: Category IDs
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - 1
          - 2
          items:
            type: integer
            format: int64
      - name: countries
        in: query
        description: Countries
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - KO
          - US
          items:
            type: string
      - name: volumes
        in: query
        description: Beer Alcohol Volume
        required: false
        style: form
        explode: true
        schema:
          type: array
          example:
          - 4
          - 8
          items:
            type: integer
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: size of one page
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: sort
        in: query
        description: type of sort
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BeerSortType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerPage'
              examples:
                BeerPage_Example:
                  value: null
                  $ref: '#/components/examples/BeerPage_Example'
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /{languageCode}/beers/top:
    get:
      tags:
      - beer
      summary: Get Top 10 beers
      operationId: findTop10Beers
      parameters:
      - name: languageCode
        in: path
        description: Language Code
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/LanguageCode'
        example: kr
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BeerResponse'
              examples:
                BeerResponse_Example:
                  value:
                    contents:
                    - id: 1
                      name_ko: 빅 웨이브
                      name_en: Bigwave
                      description: 미묘한 과일 향과 섬세한 홉 향이 나는 가벼운 골든 에일입니다. 부드럽고 마시기 좋은
                        상쾌한 에일입니다. 가볍게 볶은 허니 몰트는 이 맥주의 황금빛 색조에 기여하고 우리의 특별한 홉 블렌드로
                        균형을 이루는 약간의 단맛을 제공합니다.
                      country:
                        code: US
                        name_ko: 미국
                        name_en: The United States
                      volume: 4.4
                      image_url: "returned_from_server: <base_url>/<file_name>"
                      category:
                        id: 1
                        name_ko: 아메리칸 블론드 에일
                        name_en: American Blonde Ale
                        description: 아메리칸 블론드 에일은...
                        parent:
                          id: 10
                          name_ko: 에일
                          name_en: Ale
                          description: 에일은...
                      tags:
                      - id: 1
                        name_ko: 시트라
                        name_en: Citra
                        description: 시트라 홉은...
                      like_count: 13
                      review_count: 2
                      rate: 4.25
        "500":
          description: Internal server error. Unexpected error.
  /{languageCode}/beers/{beerId}:
    get:
      tags:
      - beer
      summary: Get one beer
      operationId: findBeerById
      parameters:
      - name: languageCode
        in: path
        description: Language Code
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/LanguageCode'
        example: kr
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeerResponse'
              examples:
                BeerRes_Example:
                  value: null
                  $ref: '#/components/examples/BeerResponse_Example'
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /reviews:
    get:
      tags:
      - review
      summary: Get all reviews
      operationId: findAllReviews
      parameters:
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: size of one page
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: sort
        in: query
        description: type of sort
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReviewSortType'
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewPage'
              examples:
                ReviewPage_Example:
                  value: null
                  $ref: '#/components/examples/ReviewPage_Example'
        "500":
          description: Internal server error. Unexpected error.
  /beers/{beerId}/reviews:
    get:
      tags:
      - review
      summary: Get all reviews specified by beer ID
      operationId: findReviewsByBeerId
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: size of one page
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: sort
        in: query
        description: type of sort
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReviewSortType'
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewPage'
              examples:
                ReviewPage_Example:
                  value: null
                  $ref: '#/components/examples/ReviewPage_Example'
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    post:
      tags:
      - review
      summary: Create a new review
      operationId: createReview
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
            examples:
              ReviewCreateRequest_Example:
                value: null
                $ref: '#/components/examples/ReviewCreateRequest_Example'
        required: true
      responses:
        "201":
          description: Review created.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not found. The beer with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
  /reviews/{reviewId}:
    get:
      tags:
      - review
      summary: Get one review with specified ID
      operationId: findReviewById
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: Ok. Get review.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
              examples:
                ReviewResponse_Example:
                  value: null
                  $ref: '#/components/examples/ReviewResponse_Example'
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    delete:
      tags:
      - review
      summary: Delete the review
      operationId: deleteReview
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "204":
          description: Review deleted.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "403":
          description: Forbidden. Inproper authorization.
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
    patch:
      tags:
      - review
      summary: Update the review
      operationId: updateReview
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateRequest'
            examples:
              ReviewUpdateRequest_Example:
                value: null
                $ref: '#/components/examples/ReviewUpdateRequest_Example'
        required: true
      responses:
        "200":
          description: Ok. Review updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
              examples:
                ReviewResponse_Example:
                  value: null
                  $ref: '#/components/examples/ReviewResponse_Example'
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "403":
          description: Forbidden. Inproper authorization.
        "404":
          description: Not found. The review with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
  /reviews/{reviewId}/likes:
    post:
      tags:
      - review like
      summary: Like the review with specified id
      operationId: createReviewLike
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "201":
          description: Like created.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not Found. Does not exist.
        "409":
          description: Conflict. Already exists.
        "500":
          description: Internal server error. Unexpected error.
    delete:
      tags:
      - review like
      summary: UnLike the review with specified id
      operationId: deleteReviewLike
      parameters:
      - name: reviewId
        in: path
        description: beer review id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "204":
          description: Unlike succeeded.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not Found. Does not exist.
        "500":
          description: Internal server error. Unexpected error.
  /beers/{beerId}/likes:
    post:
      tags:
      - beer like
      summary: Like the beer with specified id
      operationId: createBeerLike
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "201":
          description: Like created.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not Found. Does not exist.
        "409":
          description: Conflict. Already exists.
        "500":
          description: Internal server error. Unexpected error.
    delete:
      tags:
      - beer like
      summary: UnLike the beer with specified id
      operationId: deleteBeerLike
      parameters:
      - name: beerId
        in: path
        description: beer id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "204":
          description: Unlike succeeded.
        "401":
          description: Unauthorized. Access token is missing or invalid.
        "404":
          description: Not Found. Does not exist.
        "500":
          description: Internal server error. Unexpected error.
  /categories:
    get:
      tags:
      - category
      summary: Get all categories
      operationId: getCategories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - id: 1
                  name: 에일
                  description: This is Ale.
                  children:
                  - id: 10
                    name: 아메리칸 블론드 에일
                    description: This is American Blonde Ale.
                - id: 2
                  name: IPA
                  children:
                  - id: 17
                    name: 잉글리쉬 IPA
                    description: This is English IPA.
                  - id: 21
                    name: 아메리칸 IPA
                    description: This is American IPA.
                items:
                  $ref: '#/components/schemas/CategorySupResponse'
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /categories/{categoryId}:
    get:
      tags:
      - category
      summary: Get one category found by category id
      operationId: getCategory
      parameters:
      - name: categoryId
        in: path
        description: category id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: "1"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySupResponse'
              examples:
                CategoryResponse_Example:
                  value: null
                  $ref: '#/components/examples/CategoryResponse_Example'
        "404":
          description: Not found. The category with specified ID was not found.
        "500":
          description: Internal server error. Unexpected error.
      security: []
  /tags/{tagId}:
    get:
      tags:
      - tag
      summary: Get one beer tag
      operationId: findTagById
      parameters:
      - name: tagId
        in: path
        description: tag id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
              examples:
                TagResponse_Example:
                  value: null
                  $ref: '#/components/examples/TagResponse_Example'
        "500":
          description: Internal server error. Unexpected error.
      security: []
components:
  schemas:
    LanguageCode:
      type: string
      enum:
      - KR
      - EN
    ProviderType:
      type: string
      enum:
      - GOOGLE
      - FACEBOOK
      - KAKAO
      - NAVER
    RoleType:
      type: string
      enum:
      - GENERAL
      - ADMIN
    BeerSortType:
      type: string
      enum:
      - MOST_LIKES
      - MOST_REVIEWS
      - HIGH_RATE
    ReviewSortType:
      type: string
      enum:
      - RECENTLY_UPDATED
      - MOST_LIKES
      - HIGH_RATE
      - LOW_RATE
    PageRequest:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        offset:
          type: integer
          format: int32
    BeerPageRequest:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/BeerSortType'
      allOf:
      - $ref: '#/components/schemas/PageRequest'
    ReviewPageRequest:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/ReviewSortType'
      allOf:
      - $ref: '#/components/schemas/PageRequest'
    BasePage:
      type: object
      properties:
        page:
          type: integer
        total_elements:
          type: integer
          format: int32
        total_pages:
          type: integer
        nextPage:
          type: integer
    BeerPage:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/BeerResponse'
        page_request:
          $ref: '#/components/schemas/BeerPageRequest'
      allOf:
      - $ref: '#/components/schemas/BasePage'
    ReviewPage:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ReviewResponse'
        page_request:
          $ref: '#/components/schemas/ReviewPageRequest'
      allOf:
      - $ref: '#/components/schemas/BasePage'
    MemberCreateRequest:
      required:
      - username
      type: object
      properties:
        username:
          type: string
        image_url:
          maxLength: 2097152
          type: string
        status_message:
          type: string
      description: User Signup Form
    MemberUpdateRequest:
      required:
      - username
      type: object
      properties:
        username:
          type: string
        image_url:
          maxLength: 2097152
          type: string
        status_message:
          type: string
      description: User Profile Update Form
    ReviewCreateRequest:
      required:
      - content
      - rate
      type: object
      properties:
        content:
          maxLength: 1000
          type: string
        rate:
          multipleOf: 0.5
          type: number
          format: float
        image_url:
          maxLength: 2097152
          type: string
    ReviewUpdateRequest:
      required:
      - content
      - rate
      type: object
      properties:
        content:
          maxLength: 1000
          type: string
        rate:
          multipleOf: 0.5
          type: number
          format: float
        image_url:
          maxLength: 2097152
          type: string
    BaseResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    AccessTokenResponse:
      required:
      - access_token
      type: object
      properties:
        access_token:
          type: string
    MemberResponse:
      required:
      - email
      - image_url
      - provider_type
      - role_type
      - status_message
      - username
      type: object
      properties:
        email:
          type: string
          format: email
        username:
          type: string
        provider_type:
          $ref: '#/components/schemas/ProviderType'
        role_type:
          $ref: '#/components/schemas/RoleType'
        image_url:
          maxLength: 2097152
          type: string
        status_message:
          type: string
      description: User Response
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
    BeerResponse:
      required:
      - category
      - description
      - image_url
      - like_count
      - name
      - review_count
      - tags
      - volume
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        origin_country:
          type: string
        origin_city:
          type: string
        volume:
          minimum: 0.0
          type: number
          format: float
        image_url:
          maxLength: 2097152
          type: string
        category:
          $ref: '#/components/schemas/CategorySupResponse'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
        like_count:
          type: integer
          format: int64
        review_count:
          type: integer
          format: int64
        rate:
          type: number
          format: float
      description: Beer Find Response
      example:
        $ref: '#/components/examples/BeerResponse_Example'
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
    CategorySupResponse:
      required:
      - description
      - name
      - parent
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parent:
          $ref: '#/components/schemas/CategorySupResponse'
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
    TagResponse:
      required:
      - name_en
      - name_ko
      type: object
      properties:
        name_ko:
          type: string
        name_en:
          type: string
        description:
          type: string
        beers:
          type: array
          items:
            $ref: '#/components/schemas/BeerResponse'
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
    ReviewResponse:
      required:
      - beer_id
      - content
      - created_at
      - like_count
      - rate
      type: object
      properties:
        content:
          maxLength: 1000
          type: string
        rate:
          multipleOf: 0.5
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        like_count:
          type: integer
          format: int64
        beer_id:
          type: integer
          format: int64
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
  responses:
    Created:
      description: Created.
    Unauthorized:
      description: Unauthorized. Access token is missing or invalid.
    Forbidden:
      description: Forbidden. Inproper authorization.
    NotFound:
      description: Not Found. Does not exist.
    Conflict:
      description: Conflict. Already exists.
    InternalServerError:
      description: Internal server error. Unexpected error.
  parameters:
    languageCode:
      name: languageCode
      in: path
      description: Language Code
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/LanguageCode'
      example: kr
    code:
      name: code
      in: query
      description: Authorization Code
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: 4%2F0AfgeXvvXBD61wINRwaPKfudciAi7fIjHiTL48VS_tWR06hFWseMJ7iErcrIyXkrWZ0zA5g
    provider:
      name: provider
      in: path
      description: OAuth Provider Type
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/ProviderType'
      example: google
    userId:
      name: userId
      in: path
      description: User ID
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: 1
    keyword:
      name: keyword
      in: query
      description: Search keyword
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: 골든 에일
    categories:
      name: categories
      in: query
      description: Category IDs
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - 1
        - 2
        items:
          type: integer
          format: int64
    countries:
      name: countries
      in: query
      description: Countries
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - KO
        - US
        items:
          type: string
    volumes:
      name: volumes
      in: query
      description: Beer Alcohol Volume
      required: false
      style: form
      explode: true
      schema:
        type: array
        example:
        - 4
        - 8
        items:
          type: integer
    beerId:
      name: beerId
      in: path
      description: beer id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: 1
    categoryId:
      name: categoryId
      in: path
      description: category id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: 1
    tagId:
      name: tagId
      in: path
      description: tag id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: 1
    reviewId:
      name: reviewId
      in: path
      description: beer review id
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
      example: "1"
    page:
      name: page
      in: query
      description: page number
      required: true
      style: form
      explode: true
      schema:
        type: integer
    size:
      name: size
      in: query
      description: size of one page
      required: true
      style: form
      explode: true
      schema:
        type: integer
  examples:
    BeerPage_Example:
      value:
        contents:
        - id: 1
          name_ko: 빅 웨이브
          name_en: Bigwave
          description: 미묘한 과일 향과 섬세한 홉 향이 나는 가벼운 골든 에일입니다. 부드럽고 마시기 좋은 상쾌한 에일입니다.
            가볍게 볶은 허니 몰트는 이 맥주의 황금빛 색조에 기여하고 우리의 특별한 홉 블렌드로 균형을 이루는 약간의 단맛을 제공합니다.
          country:
            code: US
            name_ko: 미국
            name_en: The United States
          volume: 4.4
          image_url: "returned_from_server: <base_url>/<file_name>"
          category:
            id: 1
            name_ko: 아메리칸 블론드 에일
            name_en: American Blonde Ale
            description: 아메리칸 블론드 에일은...
            parent:
              id: 10
              name_ko: 에일
              name_en: Ale
              description: 에일은...
          tags:
          - id: 1
            name_ko: 시트라
            name_en: Citra
            description: 시트라 홉은...
          beer_id: 1
        page_request:
          page: 1
          size: 1
          offset: 0
          sort: MOST_LIKES
        page: 1
        total_elements: 1
        total_pages: 1
    MemberCreateRequest_Example:
      value:
        username: 비어러버
        image_url: https://beerlot.com/profile_image_url
        statusMessage: Great day to drink beers
    MemberUpdateRequest_Example:
      value:
        username: 퇴근후한캔
    ReviewCreateRequest_Example:
      value:
        content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
        rate: 5.0
    ReviewUpdateRequest_Example:
      value:
        content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
        rate: 5.0
    MemberResponse_Example:
      value:
        id: 1
        email: beer.lover@email.com
        password: beer10ver!@#
        username: 비어러버
        image_url: "returned_from_server: <base_url>/<file_name>"
        email_verified: true
    BeerResponse_Example:
      value:
        id: 1
        name_ko: 빅 웨이브
        name_en: Bigwave
        description: 미묘한 과일 향과 섬세한 홉 향이 나는 가벼운 골든 에일입니다. 부드럽고 마시기 좋은 상쾌한 에일입니다. 가볍게
          볶은 허니 몰트는 이 맥주의 황금빛 색조에 기여하고 우리의 특별한 홉 블렌드로 균형을 이루는 약간의 단맛을 제공합니다.
        country:
          code: US
          name_ko: 미국
          name_en: The United States
        volume: 4.4
        image_url: "returned_from_server: <base_url>/<file_name>"
        category:
          id: 1
          name_ko: 아메리칸 블론드 에일
          name_en: American Blonde Ale
          description: 아메리칸 블론드 에일은...
          parent:
            id: 10
            name_ko: 에일
            name_en: Ale
            description: 에일은...
        tags:
        - id: 1
          name_ko: 시트라
          name_en: Citra
          description: 시트라 홉은...
        like_count: 13
        review_count: 2
        rate: 4.25
        beer_id: 1
    CategoryResponse_Example:
      value:
        id: 1
        name: 아메리칸 블론드 에일
        description: This is American Blonde Ale.
    CountryResponse_Example:
      value:
        code: US
    TagResponse_Example:
      value:
        id: 1
        name_ko: 시트라
        name_en: Citra
        description: 시트라 홉은...
        beers:
        - id: 1
          name_ko: 빅 웨이브
          name_en: Bigwave
          description: 미묘한 과일 향과 섬세한 홉 향이 나는 가벼운 골든 에일입니다. 부드럽고 마시기 좋은 상쾌한 에일입니다.
            가볍게 볶은 허니 몰트는 이 맥주의 황금빛 색조에 기여하고 우리의 특별한 홉 블렌드로 균형을 이루는 약간의 단맛을 제공합니다.
          country:
            code: US
            name_ko: 미국
            name_en: The United States
          volume: 4.4
          image_url: "returned_from_server: <base_url>/<file_name>"
          category:
            id: 1
            name_ko: 아메리칸 블론드 에일
            name_en: American Blonde Ale
            description: 아메리칸 블론드 에일은...
            parent:
              id: 10
              name_ko: 에일
              name_en: Ale
              description: 에일은...
          tags:
          - id: 1
            name_ko: 시트라
            name_en: Citra
            description: 시트라 홉은...
          like_count: 13
          review_count: 2
          rate: 4.25
    ReviewResponse_Example:
      value:
        id: 1
        content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
        rate: 5.0
        created_at: 2022-09-25T16:19:25Z
    AccessTokenResponse_Example:
      value:
        access_token: eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJiZWVybG90LXNlcnZlciIsImlhdCI6MTY3MTEyOTE1Niwic3ViIjoieW91amluLmxlZS5kZXZAZ21haWwuY29tIiwicm9sZXMiOlsiUk9MRV9HVUVTVCJdfQ.H3kMaI9aHMYWd-U9wo00bfb0MhNdmiQSfFy41uKunZyueKE2ksu0jVy7oYYOPKz3EfJPbUCt3ol6FxPNhk-EvA
    ReviewPage_Example:
      value:
        contents:
        - id: 1
          content: 이 맥주 진짜 맛있어요! 보일 때마다 사먹을거야
          rate: 5.0
          created_at: 2022-09-25T16:19:25Z
        - id: 10
          content: 생각보다 좀 맹맹했어요ㅠㅠ
          rate: 3.5
          created_at: 2022-08-29T11:20:45Z
        page_request:
          page: 1
          size: 1
          offset: 0
          sort: MOST_LIKES
        page: 1
        total_elements: 1
        total_pages: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
